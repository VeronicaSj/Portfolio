{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veron\\\\Desktop\\\\Portfolio\\\\src\\\\components\\\\general\\\\prosConsComp\\\\ProsConsComp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProsConsComp({\n  key\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The Good Thing About TDD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Clearer Design from the Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Writing tests first forces you to think about how the code should behave before implementing it. This leads to simpler APIs and a design more focused on real-world use.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Confidence When Changing Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Refactoring is no longer scary. Just running the tests lets you know if you've broken something. This is golden when the project starts to grow.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Fewer Bugs in Production\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Although it doesn't eliminate errors 100%, writing tests first reduces forgotten or poorly considered cases. You often find inconsistencies before failures occur.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The Not-So-Good Thing About TDD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Learning Curve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Adopting TDD isn't intuitive at first. It requires discipline and breaking the habit of \\\"writing code and then seeing if it works.\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Initial Slowness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Writing tests before programming can make progress seem slower, especially in the early stages. Sometimes you need to validate an idea quickly, and TDD can feel like a hindrance.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Test Maintenance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Tests are code too. When requirements change a lot, maintaining them can be cumbersome and even counterproductive.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"False Sense of Security\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.parag,\n            children: \"Having many tests doesn't guarantee that the software will work perfectly. If the tests don't cover real-world cases or are poorly designed, they can create false confidence.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = ProsConsComp;\nexport default ProsConsComp;\nvar _c;\n$RefreshReg$(_c, \"ProsConsComp\");","map":{"version":3,"names":["ProsConsComp","key","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","styles","parag","_c","$RefreshReg$"],"sources":["C:/Users/veron/Desktop/Portfolio/src/components/general/prosConsComp/ProsConsComp.js"],"sourcesContent":["\r\nfunction ProsConsComp({key}) {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>\r\n                    The Good Thing About TDD\r\n                </h3>\r\n                <ol>\r\n                    <li>\r\n                        <h4>\r\n                            Clearer Design from the Start\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                            Writing tests first forces you to think \r\n                            about how the code should behave before \r\n                            implementing it. This leads to simpler APIs\r\n                            and a design more focused on real-world use.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h4>\r\n                            Confidence When Changing Code\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                            Refactoring is no longer scary. Just running\r\n                            the tests lets you know if you've broken \r\n                            something. This is golden when the project\r\n                            starts to grow.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h4>\r\n                            Fewer Bugs in Production\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                            Although it doesn't eliminate errors 100%,\r\n                            writing tests first reduces forgotten or \r\n                            poorly considered cases. You often find \r\n                            inconsistencies before failures occur.\r\n                        </p>\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            <div>\r\n                <h3>\r\n                    The Not-So-Good Thing About TDD\r\n                </h3>\r\n                <ol>\r\n                    <li>\r\n                        <h4>\r\n                            Learning Curve\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                        Adopting TDD isn't intuitive at first. It \r\n                        requires discipline and breaking the habit of\r\n                            \"writing code and then seeing if it works.\" \r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h4>\r\n                            Initial Slowness\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                            Writing tests before programming can make\r\n                            progress seem slower, especially in the \r\n                            early stages. Sometimes you need to validate\r\n                            an idea quickly, and TDD can feel like a \r\n                            hindrance.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h4>\r\n                            Test Maintenance\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                            Tests are code too. When requirements change\r\n                            a lot, maintaining them can be cumbersome and\r\n                            even counterproductive.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h4>\r\n                            False Sense of Security\r\n                        </h4>\r\n                        <p className={styles.parag}>\r\n                            Having many tests doesn't guarantee that the\r\n                            software will work perfectly. If the tests \r\n                            don't cover real-world cases or are poorly \r\n                            designed, they can create false confidence.\r\n                        </p>\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProsConsComp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}